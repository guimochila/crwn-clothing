// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuItem component should render MenuItem component 1`] = `
.c0 {
  height: 380px;
  min-width: 30%;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border: 1px solid black;
  margin: 0 7.5px 15px;
  overflow: hidden;
}

.c0:hover {
  cursor: pointer;
}

.c0:hover .background-image {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
  -webkit-transition: -webkit-transform 3s cubic-bezier(0.25,0.45,0.45,0.95);
  -webkit-transition: transform 3s cubic-bezier(0.25,0.45,0.45,0.95);
  transition: transform 3s cubic-bezier(0.25,0.45,0.45,0.95);
}

.c0:hover .content {
  -webkit-transition: opacity 0.5s ease;
  transition: opacity 0.5s ease;
  opacity: 0.9;
}

.c0:first-child {
  margin-right: 7.5px;
}

.c0:last-child {
  margin-left: 7.5px;
}

.c1 {
  width: 100%;
  height: 100%;
  background-position: center;
  background-size: cover;
  background-image: url(https://imgsrc.com/hats);
}

.c2 {
  height: 90px;
  padding: 0 25px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border: 1px solid black;
  background-color: #fff;
  opacity: 0.7;
  position: absolute;
}

.c3 {
  font-weight: bold;
  margin-bottom: 6px;
  font-size: 22px;
  color: #4a4a4a;
}

.c4 {
  font-weight: lighter;
  font-size: 16px;
}

@media screen and (max-width:800px) {
  .c0 {
    height: 200px;
  }
}

<MenuItem
  history={
    Object {
      "push": [MockFunction],
    }
  }
  imageUrl="https://imgsrc.com/hats"
  linkUrl="/hats"
  match={
    Object {
      "url": "/shop",
    }
  }
  size="large"
  title="Hats"
>
  <MenuItemContainer
    onClick={[Function]}
    size="large"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  height: ",
              [Function],
              ";
  min-width: 30%;
  flex: 1 1 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid black;
  margin: 0 7.5px 15px;
  overflow: hidden;

  &:hover {
    cursor: pointer;

    & .background-image {
      transform: scale(1.1);
      transition: transform 3s cubic-bezier(0.25, 0.45, 0.45, 0.95);
    }

    & .content {
      transition: opacity 0.5s ease;
      opacity: 0.9;
    }
  }

  &:first-child {
    margin-right: 7.5px;
  }

  &:last-child {
    margin-left: 7.5px;
  }

  @media screen and (max-width: 800px) {
    height: 200px;
  }
",
            ],
          },
          "displayName": "MenuItemContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      onClick={[Function]}
      size="large"
    >
      <div
        className="c0"
        onClick={[Function]}
        size="large"
      >
        <BackgroundImageContainer
          className="background-image"
          imageUrl="https://imgsrc.com/hats"
        >
          <StyledComponent
            className="background-image"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  width: 100%;
  height: 100%;
  background-position: center;
  background-size: cover;
  background-image: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "BackgroundImageContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            imageUrl="https://imgsrc.com/hats"
          >
            <div
              className="background-image c1"
            />
          </StyledComponent>
        </BackgroundImageContainer>
        <styled.div
          className="content"
        >
          <StyledComponent
            className="content"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  height: 90px;
  padding: 0 25px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border: 1px solid black;
  background-color: #fff;
  opacity: 0.7;
  position: absolute;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="content c2"
            >
              <styled.span>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": true,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  font-weight: bold;
  margin-bottom: 6px;
  font-size: 22px;
  color: #4a4a4a;
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="c3"
                  >
                    HATS
                  </span>
                </StyledComponent>
              </styled.span>
              <styled.span>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  font-weight: lighter;
  font-size: 16px;
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="c4"
                  >
                    SHOP NOW
                  </span>
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </MenuItemContainer>
</MenuItem>
`;
