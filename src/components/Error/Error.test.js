import React from 'react';
import { shallow, mount } from 'enzyme';

import Error from './Error';
import { ErrorImageContainer } from './Error.styles';

function ErrorChild() {
  return <div>Error</div>;
}

describe('Error boundary component', () => {
  let wrapper;
  const imageUrl = 'https://i.imgur.com/yW2W9SC.png';

  beforeEach(() => {
    wrapper = mount(
      <Error>
        <ErrorChild />
      </Error>,
    );
    wrapper.setState({ hasError: true });
  });
  test('displays error message when on error generated by child', () => {
    expect(wrapper).toMatchSnapshot();
  });

  test('ErrorImageContainer should render imageUrl prop', () => {
    expect(wrapper.find(ErrorImageContainer).prop('imageUrl')).toBe(imageUrl);
    const renderedErrorImageContainer = mount(
      <ErrorImageContainer imageUrl={imageUrl} />,
    );
    expect(renderedErrorImageContainer).toHaveStyleRule(
      'background-image',
      `url(${imageUrl})`,
    );
  });
});
